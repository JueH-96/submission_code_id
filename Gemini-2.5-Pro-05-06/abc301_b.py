import sys

def main():
    N = int(sys.stdin.readline())
    A = list(map(int, sys.stdin.readline().split()))

    # Constraints: 2 <= N <= 100. A has at least two elements.
    # A_i are positive integers, A_i != A_{i+1}.

    result_sequence = [A[0]] # Start with the first element of the original sequence

    # Iterate through adjacent pairs from the original sequence A
    # For each pair (A[i], A[i+1]), fill in the numbers
    for i in range(N - 1): # i goes from 0 to N-2
        current_original_val = A[i]
        next_original_val = A[i+1]

        if current_original_val < next_original_val:
            # Insert numbers: current_original_val + 1, ..., next_original_val - 1
            # These are generated by range(current_original_val + 1, next_original_val)
            for val_to_insert in range(current_original_val + 1, next_original_val):
                result_sequence.append(val_to_insert)
        else: # current_original_val > next_original_val
            # Insert numbers: current_original_val - 1, ..., next_original_val + 1
            # These are generated by range(current_original_val - 1, next_original_val, -1)
            for val_to_insert in range(current_original_val - 1, next_original_val, -1):
                result_sequence.append(val_to_insert)
        
        # After inserting intermediate numbers (if any), append the next original value itself
        result_sequence.append(next_original_val)

    # Print the terms of the final sequence, separated by spaces
    print(*result_sequence)

if __name__ == '__main__':
    main()